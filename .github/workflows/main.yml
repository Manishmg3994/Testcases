name: Run TestSweets Tests

on:
  push:
  workflow_dispatch:

jobs:
  testsweets_tests:
    runs-on: macos-14 # use macos-14 insted of macos-latest-large as that is based on M1 (  https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#:~:text=N/A-,macOS,N/A,-Standard%20GitHub%2Dhosted ) 

    # outputs:
    #   built-apk: ${{ steps.buildApk.outputs.apkPath }}

    steps:
      - name: checkout
        uses: actions/checkout@v4

      # - name: 'Set up JDK'
      #   uses: actions/setup-java@v4
      #   with:
      #     distribution: 'zulu' # See 'Supported distributions' for available options
      #     java-version: '21'


      # # - name: Enable KVM
      # #   run: |
      # #     echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
      # #     sudo udevadm control --reload-rules
      # #     sudo udevadm trigger --name-match=kvm

      # - name: Setup Homebrew
      #   run: |
      #     /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      
      # - name: Install TestSweets
      #   run: |
      #     brew tap filledstacks/tap
      #     brew install testsweets
      
          
       # Create AVD and start emulator
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'  # Specify the JDK distribution
          java-version: '8'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          sdk-platform: '30'

      - name: Create and Start Emulator
        run: |
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --name test_emulator --package "system-images;android-30;google_apis_playstore;x86"
          emulator -avd test_emulator -no-window -accel on

      - name: Wait for Emulator to Boot
        run: |
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'

      - name: List Connected Devices
        run: adb devices
        
      - name: Android Emulator 
        run: |
          avd_list=$(emulator -list-avds)
          if [ -z "$avd_list" ]; then
            echo "No emulators found."
          else
            echo "$avd_list"
          fi

      # - name: Create Android emulator
      #   run: avdmanager create avd -n emulator -k "system-images;android-30;google_apis;x86_64" --force

      # - name: Start Android emulator
      #   run: $ANDROID_SDK_ROOT/emulator/emulator -avd emulator -no-audio -no-window -accel on

      # - name: Wait for emulator to start
      #   run: sleep 30



      # - name: Start Android emulator
      #   run: |
      #     emulator -avd <emulator_name> -no-audio -no-window -accel on

      # - uses: futureware-tech/simulator-action@v3
      #   with:
      #     model: 'iPhone 8'
      

        

      # - name: Run TestSweets Tests
      #   run: testsweets run -p qA5ua2TOgxBtMGcSVBGE -a build/app/outputs/flutter-apk/app-debug.apk
